name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest --import-mode=append src/tests/

# # This is a basic workflow to help you get started with Actions

# name: flake8 and pytest

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]


# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   flake8-pytest:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Check out source repository
#       - uses: actions/checkout@v3
#       - name: Set up Python environment
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.8"
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#       - name: flake8 Lint
#         uses: py-actions/flake8@v2
#       - name: Test with pytest
#         run: |
#           # pip install pytest pytest-cov
#           pytest -v tests.py #--doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

        
      
# #       jobs:
# #   flake8-lint:
# #     runs-on: ubuntu-latest
# #     name: Lint
# #     steps:
# #       - name: Check out source repository
# #         uses: actions/checkout@v3
# #       - name: Set up Python environment
# #         uses: actions/setup-python@v4
# #         with:
# #           python-version: "3.11"
# #       - name: flake8 Lint
# #         uses: py-actions/flake8@v2
  


# #       # Runs a single command using the runners shell
# #       - name: Run a one-line script
# #         run: echo Hello, world!

# #       # Runs a set of commands using the runners shell
# #       - name: Run a multi-line script
# #         run: |
# #           echo Add other actions to build,
# #           echo test, and deploy your project.
          
# # name: Lint and Test

# # on: [push, pull_request]

# # jobs:
# #   flake8-lint:
# #     runs-on: ubuntu-latest
# #     name: Lint
# #     steps:
# #       - name: Check out source repository
# #         uses: actions/checkout@v3
# #       - name: Set up Python environment
# #         uses: actions/setup-python@v4
# #         with:
# #           python-version: "3.11"
# #       - name: flake8 Lint
# #         uses: py-actions/flake8@v2
  
# #     name: Lint
# #     steps:
# #     - uses: actions/checkout@v3
# #     - name: Set up Python
# #       uses: actions/setup-python@v4
# #       with:
# #         python-version: '3.x'
# #     - name: Install dependencies
# #       run: |
# #         python -m pip install --upgrade pip
# #         pip install -r requirements.txt
# #     - name: Test with pytest
#       run: |
#         pip install pytest pytest-cov
#         pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
